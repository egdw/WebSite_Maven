<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd


		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
    <context:component-scan base-package="com.website.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 从配置文件读取数据库信息 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="10"/>
        <property name="maxStatements" value="100"/>
        <property name="loginTimeout" value="300"/>
        <property name="initialPoolSize" value="5"></property>
        <property name="checkoutTimeout" value="1000"/>
        <property name="testConnectionOnCheckin" value="true"></property>
        <property name="idleConnectionTestPeriod" value="60"></property>
    </bean>

    <!-- sqlSessionFactory 创建工厂对象 -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <bean id="sqlSessionFactory" class="com.website.test.BeanFactory">
        <!-- 加载mybatis的配置文件 -->
        <property name="configLocation" value="classpath:mybatis.xml"></property>
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 自动扫描Mapper的配置文件,不用去mybatis配置文件中进行设置了 -->
        <property name="mapperLocations" value="classpath:com/website/mapper/*Mapper.xml"/>
        <!-- 自动设置对应的Mapper对象名称 比如com.Dog 可以写成Dog -->
        <property name="typeAliasesPackage" value="com.website.entites"/>
    </bean>

    <!-- 这个是自动扫描对应包下面的mapper对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.website.mapper"/>
    </bean>

    <!-- 自定义的Realm,进行一些权限用户的拦截 -->
    <bean id="AuthUsernameAndPasswordRealm" class="com.website.realm.AuthUsernameAndPasswordRealm"></bean>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
    </bean>

    <!-- remenberMe配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe" />
        <property name="httpOnly" value="true" />
        <!-- 默认记住7天（单位：秒） -->
        <property name="maxAge" value="604800" />
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
        <property name="cookie" ref="rememberMeCookie" />
    </bean>

    <!-- 核心,安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="rememberMeManager" ref="rememberMeManager" />
        <!-- 传入相应的realm,如果有多个realm,那么久需要<Realms>标签 -->
        <property name="realm" ref="AuthUsernameAndPasswordRealm"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 不太清楚,但是应该都是必须要配(好像叫生命周期处理器) -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- websocket消息处理bean -->
    <bean id="handShakeInteceptor" class="com.website.interceptor.HandShakeInteceptor"></bean>
    <bean id="serviceHandler" class="com.website.interceptor.WebServiceHandler"></bean>
    <!-- session都保存在这个静态类当中.只是保存在内存里而已 -->
    <bean id="sessions" class="com.website.utils.ChatConstant"></bean>
    <websocket:handlers allowed-origins="*">
        <!-- 配置消息处理bean和路径的映射关系 -->
        <websocket:mapping path="/websocket/chat" handler="serviceHandler"/>
        <!-- 配置握手拦截器 -->
        <websocket:handshake-interceptors>
            <bean class="com.website.interceptor.HandShakeInteceptor"></bean>
        </websocket:handshake-interceptors>
        <!-- 开启sockjs，去掉则关闭sockjs -->
        <!--<websocket:sockjs/>-->
    </websocket:handlers>
    <!-- 配置websocket消息的最大缓冲区长度 -->
    <bean class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean">
        <property name="maxTextMessageBufferSize" value="8192"/>
        <property name="maxBinaryMessageBufferSize" value="8192"/>
    </bean>

    <!-- shiro过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/index.jsp"/>
        <property name="successUrl" value="/index.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filterChainDefinitions">
            <value>
                /css/** = anon
                /images/** = anon
                /AboutMy/** = anon
                /ZhiHu/** = anon
                /pageController/** = anon
                /js/** = anon
                /login/** = anon
                /register/** = anon
                /project/MyProject.do = anon
                /funnyView.do = anon
                /tempView.do = anon
                /upload/** = anon
                /WEB-INF/** = anon
                /index.jsp = anon
                /index.html = anon
                /banner/** = anon
                /chat.jsp = anon
                /login/logout.do = anon
                /login/manager = anon
                /comment/add = anon
                /comment/get = anon
                /comment/getVeriyImage = anon
                /blog/** = anon
                /music/** = anon
                /layer/** = anon
                /read/** = anon
                / = anon
                /recommend.jsp = anon
                /login/Login.do = anon
                /music = anon
                /unauthorized.jsp = anon
                /image = anon
                /login.jsp = anon
                /*.jar = anon
                /assets/** = anon
                /layui/** = anon
                /user_top.jsp = anon
                /404.jsp=anon
                /401.jsp=anon
                /ckeditor/** = anon
                /ckfinder/** = anon
                /chat/size = anon
                /** = authc
            </value>
        </property>
    </bean>


    <!--<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
        <!--<property name="configLocation" value="classpath:mybatis_ehcache.xml"/>-->
    <!--</bean>-->
</beans>